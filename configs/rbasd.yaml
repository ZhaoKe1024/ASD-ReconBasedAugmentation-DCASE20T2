dev_directory : G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/dataset
eval_directory : G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset
model_directory: ../models
result_directory: ../results
version: STgram-MFN
description: STgram-MFN
time_version: False # if set ture, add time information in version
save_version_files: False # if set true, save each version files in runs

# 数据集参数
dataset_conf:
  # 过滤最短的音频长度
  min_duration: 0.5
  # 最长的音频长度，大于这个长度会裁剪掉
  max_duration: 3
  # 是否裁剪静音片段
  do_vad: False
  # 音频的采样率
  sample_rate: 16000
  secs: 10
  power: 2.0
  n_fft: 1024
  n_mels: 128
  win_length: 1024
  hop_length: 512
  # 是否对音频进行音量归一化
  use_dB_normalization: True
  # 对音频进行音量归一化的音量分贝值
  target_dB: -20
#  data_dir: "F:/Program Files (zk)/data/dcase2020-asd-task2/data/datasets"
#  eval_dir: "F:/Program Files (zk)/data/dcase2020-asd-task2/data/eval_dataset"
  data_dir: "G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/dataset"
  eval_dir: "G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset"
  add_dirs:
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_fan/train
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_pump/train
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_slider/train
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_ToyCar/train
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_ToyConveyor/train
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_valve/train
  test_dirs:
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_fan/fan/test
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_pump/pump/test
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_slider/slider/test
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_ToyCar/ToyCar/test
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_ToyConveyor/ToyConveyor/test
    - G:/DATAS-DCASE-ASD/DCASE2020Task2ASD/eval_dataset/eval_data_test_valve/valve/test
  # 训练数据的数据列表路径
  train_list: '../datasets/d2020_train_list.txt'
  add_list: ""
  # 评估注册的数据列表路径
  test_list: '../datasets/test_list.txt'
  # 评估检验的数据列表路径
  eval_list: '../datasets/eval_list.txt'
  # 评估的数据要特殊处理
  eval_conf:
    # 评估的批量大小
    batch_size: 64
    # 最长的音频长度
    max_duration: 20
  # 数据加载器参数
  dataLoader:
    # 训练的批量大小
    batch_size: 64
    # 读取数据的线程数量
    num_workers: 0
  # 数据增强参数
  aug_conf:
    # 是否使用语速扰动增强
    speed_perturb: True
    # 使用语速增强是否分类大小翻三倍
    speed_perturb_3_class: True
    # 是否使用音量增强
    volume_perturb: False
    # 音量增强概率
    volume_aug_prob: 0.2
    # 噪声增强的噪声文件夹
    noise_dir: 'datasets/noise'
    # 噪声增强概率
    noise_aug_prob: 0.2
  # 是否使用SpecAug
  use_spec_aug: True
  # Spec增强参数
  spec_aug_args:
    # 随机频谱掩码大小
    freq_mask_width: [ 0, 8 ]
    # 随机时间掩码大小
    time_mask_width: [ 0, 10 ]

# 数据预处理参数
preprocess_conf:
  # 音频预处理方法，支持：MelSpectrogram、Spectrogram、MFCC、Fbank
#  feature_method: 'Fbank'
  feature_method: 'MFCC'
  # 设置API参数，更参数查看对应API，不清楚的可以直接删除该部分，直接使用默认值
  method_args:
    sample_rate: 16000
#    num_mel_bins: 80

optimizer_conf:
  # 优化方法，支持Adam、AdamW、SGD
  optimizer: 'Adam'
  # 初始学习率的大小
  learning_rate: 0.001
  weight_decay: !!float 1e-5
  # 学习率衰减函数，支持WarmupCosineSchedulerLR、CosineAnnealingLR
  scheduler: 'WarmupCosineSchedulerLR'
  # 学习率衰减函数参数
  scheduler_args:
    min_lr: !!float 5e-5
    max_lr: 0.001
    warmup_epoch: 5

loss_conf:
  # 所使用的损失函数，支持AAMLoss、AMLoss、ARMLoss、CELoss
  use_loss: 'AAMLoss'
  # 损失函数参数
  args:
    margin: 0.2
    scale: 32
    easy_margin: False
  # 是否使用损失函数margin调度器
  use_margin_scheduler: True
  # margin调度器参数
  margin_scheduler_args:
    final_margin: 0.3

train_conf:
  # 是否开启自动混合精度
  enable_amp: True
  # 是否使用Pytorch2.0的编译器
  use_compile: False
  # 训练的轮数
  max_epoch: 10
  log_interval: 30
  train_from_zero: True

# 所使用的模型
use_model: 'STgramMFN'
use_platform: "windows"
result_dir: ../results
# audio preprocess
run_save_dir: "../run/dcase2020_mystgram/"
resume_model: ""
log_interval: 8

cuda: True
# train
random_seed: 42
device_ids:
  - 0
valid_every_epochs: 10
early_stop_epochs: -1
start_save_model_epochs: 300
save_model_interval_epochs: 1
start_scheduler_epoch: 20
start_valid_epoch: 0

# loss
use_arcface: True
m: 0.7
s: 30
sub_center: 1

# anomaly score
gmm_n: False # if set as a int value, use gmm to fit feature for each ID and estimate anomaly score

# test
load_epoch: False # it will test your model if set a value, e.g. best, 10, 100

max_fpr : 0.1
num_class: 23
seed: 3407
model:
  input_dim: 128
  input_length: 288
  optimizer : adam
  cls_lr: 0.001  #
  recon_lr: 0.01
  loss : cce
  type_class_num: 6
  mtid_class_num: 23

  enable_amp: True
  start_scheduler_epoch: 15
  weight_decay: !!float 1e-5
  # WarmupCosineSchedulerLR、CosineAnnealingLR
  scheduler: 'WarmupCosineSchedulerLR'
  min_lr: !!float 5e-5
  max_lr: 0.001
  warmup_epoch: 5

feature:
  sample_rate: 16000
  wav_length: 147000
  n_mels: 128
  frames : 5
  n_fft: 1024
  hop_length: 512
  power: 2.0

augment:
  speed_change: False  # if augment samples using speed change
  edge_enhance: False  # if use edge enhancement
  time_shift: False  # if augment samples using time shift
  time_flip: False  # if augment samples using time flip(but i think it need not to di this, it's similar with time shift)
  denosing: False  # if augment samples using denosing


fit:
  epochs : 30
  recon_epochs: 40
  batch_size : 64
  shuffle : True
  validation_split : 0.1
  verbose : 1
threshold_method: "gamma"  # "svm"